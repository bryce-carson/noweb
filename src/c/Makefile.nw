%% -*- mode: poly-noweb; polymode-default-inner-mode: makefile-mode; -*-

The original makefile is the copyrighted material of Norman Ramsey, with
copyright dating from 1991. Norman Ramsey retains all rights. See the COPYRIGHT
file included in the source distribution for more details.

\chapter{CPIF & Tools with purposefully bad timestamps}
At some point in the development history and maintenance of Noweb it was
necessary to ``distribute tools with bad timestamps'' to end users, or specific
people, and so the [[.nw.h]] suffix rule was either:

\begin{list}
\item{once [[$(notangle) -Rheader $< | cpif $@]] and subsequently changed to
  [[$(notangle) -Rheader $< $(CPIF) $@]], with the two definitions of ``CPIF''
  created such that they could be manually toggled by Norman Ramsey, \em{OR}}
\item{always the latter definition of the rule.}
\end{list}

Either way, to utilize [[cpif]] and distribute tools with bad timestamps one
definition for the rule would be enabled and the other disabled. Either
definition is replaced with [[@<<greater than>>]] or a [[@<<pipe to cpif>>]].

<<greater than>>=
>
@

<<pipe to cpif>>=
| cpif
@

<<Define a rule (otherwise unused) to conditionally copy files (with bad timestamps)>>=
CPIF=<<greater than>>
@

<<usecpif.sh>>=
#!/bin/sh

case $# in
  0) ;;
  *) echo "Usage: `basename $0`" 1>&2; exit 1
esac

rc=0
new=$(mktemp); old=$(mktemp)

for file in src/c/Makefile.nw
do
  trap 'rm -f $new $old; exit 1' 1 2 15 # clean up files
  if sed -e 's/^CPIF=<<greater than>>$/CPIF=<<pipe to cpif>>/' <$file >$new
  then
    cp $file $old       # save original file
    trap 'trap "" 1 2 15; cp $old $file # ignore signals
          rm -f $new $old; exit 1' 1 2 15       # during restore
    cp $new $file
  else
    echo "usecpif: failed to change $file" 1>&2
    rc=1
  fi
done
rm -f $new $old
exit $rc
@

The above file is adapted from Norman Ramsey's ``awkname'' program, which is
used to modify sources in the Noweb distribution to make the system compatible
with various implementations of AWK. Similarly, ``uscpif.sh'' is called
\em{to use cpif}.

\chapter{Implicit Rules and Suffix Rules}

One should consult \url{https://www.gnu.org/software/make/manual/html_node/Suffix-Rules.html}.

<<Define Old-Fashioned Suffix Rules>>=
.SUFFIXES: .nw .tex .dvi .h
.nw.tex:
	noweave $< > $@
.nw.c:
	$(NOTANGLE) -L $< > $@
.nw.h:
	$(NOTANGLE) -Rheader $< $(CPIF) $@

all: nt markup mnt finduses nwmktemp

nt: $(TANGLEOBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(TANGLEOBJS)

markup: $(MARKUPOBJS) | /usr/local/bin/notangle
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(MARKUPOBJS)

mnt: $(MNTOBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(MNTOBJS)

finduses: $(FINDUSESOBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(FINDUSESOBJS)

nwmktemp: $(NWMKTEMPOBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(NWMKTEMPOBJS)

fakepretty: $(FPOBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $(FPOBJS)
@

<<Makefile>>=
# Copyright 1991 by Norman Ramsey.  All rights reserved.
# See file COPYRIGHT for more information.
SHELL=/bin/sh

# Adjust these two lines for your ANSI C compiler
CC=gcc
CFLAGS=-ansi -pedantic -O -Wall -Werror

# after installation, make doc.dvi for literate version

TANGLEOBJS=notangle.o getline.o match.o modules.o modtrees.o strsave.o \
	main.o errors.o columns.o gitversion.o
MARKUPOBJS=markmain.o strsave.o markup.o errors.o getline.o columns.o gitversion.o
MNTOBJS=mnt.o getline.o match.o modules.o modtrees.o notangle.o \
	strsave.o errors.o columns.o gitversion.o
FINDUSESOBJS=columns.o errors.o finduses.o match.o getline.o recognize.o gitversion.o
NWMKTEMPOBJS=nwmktemp.o gitversion.o
FPOBJS=fakepretty.o pretty.o errors.o getline.o match.o strsave.o columns.o gitversion.o

FILES=markmain.nw markup.nw \
	main.nw notangle.nw match.nw mnt.nw modules.nw modtrees.nw \
	finduses.nw recognize.nw \
	getline.nw columns.nw errors.nw strsave.nw

SRCS=columns.h errors.h getline.h markup.h match.h modtrees.h \
	modules.h notangle.h recognize.h strsave.h \
	columns.c errors.c getline.c markup.c match.c modtrees.c \
	modules.c notangle.c recognize.c strsave.c \
	main.c markmain.c mnt.c finduses.c nwmktemp.c \
	markup.ps

NOTANGLE=notangle
.PHONY: notangle noweave
notangle:
	@echo "'notangle' is a script wrapper, not a binary build target."
	@echo "Use 'make nt' or 'make all' to build its C backend."

noweave:
	@echo "'noweave' is a script wrapper, not a binary build target."

<<Define a rule (otherwise unused) to conditionally copy files (with bad timestamps)>>

<<Define Old-Fashioned Suffix Rules>>

source: $(SRCS)
touch: $(SRCS)
	touch $(SRCS)

boot:
	touch $(SRCS)

clean:
	rm -f nt markup mnt finduses nwmktemp fakepretty
	rm -f core *.makelog *.tex *.log *.blg *.dvi *.o *.toc *~
	rm -f *.atac *.trace *.html

clobber: clean
	rm -f $(SRCS) fakepretty.c pretty.[ch] gitversion.c

doc.tex: doc.nw
	cp doc.nw $@

allcode.tex: $(FILES)
	noweave -n -index $(FILES) > $@

doc.dvi: doc.tex allcode.tex
	latex doc; latex doc; latex doc

doc.ps: doc.dvi
	dvips doc

markup.ps: markmain.nw
	notangle -Rmarkup.dot markmain.nw | dot -Tps > $@

gitversion.c: ../gitversion $(wildcard ../../.git/refs/heads/master)
	echo 'const char gitversion[] = "'"$$(../gitversion -prefix)"'";' > $@

<<object dependencies on headers>>
@

Except for [[nwmktemp.o]] and [[recognize.o]], each listed object file has
explicit dependencies on various headers.

<<object dependencies on headers>>=
columns.o:      columns.h
errors.o:       errors.h
fakepretty.o:   pretty.h
finduses.o:     errors.h match.h getline.h recognize.h
getline.o:      columns.h errors.h getline.h
main.o:         notangle.h errors.h columns.h modules.h modtrees.h
markmain.o:     errors.h markup.h getline.h columns.h
markup.o:       markup.h strsave.h errors.h
match.o:        match.h
mnt.o:          modules.h modtrees.h notangle.h errors.h columns.h strsave.h
modtrees.o:     strsave.h modules.h modtrees.h errors.h
modules.o:      modules.h modtrees.h errors.h columns.h strsave.h
notangle.o:     strsave.h getline.h modules.h modtrees.h errors.h match.h notangle.h
nwmktemp.o:
pretty.o:       getline.h match.h errors.h pretty.h strsave.h
recognize.o:
strsave.o:      strsave.h errors.h
@
